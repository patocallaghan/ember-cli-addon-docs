{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","dummy/tests/acceptance/docs-route-test.js","dummy/tests/acceptance/sandbox/api/components-test.js","dummy/tests/acceptance/sandbox/api/guides-test.js","dummy/tests/acceptance/sandbox/api/helpers-test.js","dummy/tests/acceptance/search-test.js","dummy/tests/acceptance/version-selector-test.js","dummy/tests/app.lint-test.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/ember-cli-clipboard.js","dummy/tests/helpers/ember-keyboard/register-test-helpers.js","dummy/tests/helpers/ember-test-selectors.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/page-object.js","dummy/tests/pages/api/class.js","dummy/tests/pages/api/module.js","dummy/tests/pages/app.js","dummy/tests/pages/base.js","dummy/tests/pages/guide.js","dummy/tests/test-helper.js","dummy/tests/tests.lint-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('dummy/tests/acceptance/docs-route-test', ['qunit', 'ember-qunit', 'ember-cli-mirage/test-support/setup-mirage', '@ember/test-helpers'], function (_qunit, _emberQunit, _setupMirage, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | Docs route test', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _setupMirage.default)(hooks);\n\n    (0, _qunit.test)('the docs route renders', async function (assert) {\n      await (0, _testHelpers.visit)('/docs');\n\n      assert.equal((0, _testHelpers.currentURL)(), '/docs');\n    });\n\n    (0, _qunit.test)('I can visit an autogenerated docs route', async function (assert) {\n      await (0, _testHelpers.visit)('/docs');\n      await (0, _testHelpers.click)('[data-test-label=\"{{docs-hero}}\"]');\n\n      assert.dom('h1').hasText('DocsHero');\n    });\n\n    (0, _qunit.test)('I can visit a nested child route within the docs pages and still have the correct links', async function (assert) {\n      await (0, _testHelpers.visit)('/sandbox/docs/one/child');\n      assert.dom('[data-test-next-link] > a').hasText('Two');\n    });\n  });\n});","define('dummy/tests/acceptance/sandbox/api/components-test', ['qunit', 'ember-qunit', 'ember-cli-mirage/test-support/setup-mirage', '@ember/test-helpers', 'dummy/tests/pages/api/module'], function (_qunit, _emberQunit, _setupMirage, _testHelpers, _module2) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | Sandbox | API | components', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _setupMirage.default)(hooks);\n\n    (0, _qunit.test)('nested components work', async function (assert) {\n      await (0, _testHelpers.visit)('/sandbox');\n      await _module2.default.navItems.findOne({ text: '{{simple-list}}' }).click();\n\n      assert.equal((0, _testHelpers.currentURL)(), '/sandbox/api/components/simple-list', 'correct url');\n\n      await _module2.default.navItems.findOne({ text: '{{simple-list/\\u200Bitem}}' }).click();\n\n      assert.equal((0, _testHelpers.currentURL)(), '/sandbox/api/components/simple-list/item', 'correct url');\n    });\n\n    (0, _qunit.test)('component page index works', async function (assert) {\n      await (0, _testHelpers.visit)('/sandbox');\n      await _module2.default.navItems.findOne({ text: '{{esdoc-component}}' }).click();\n\n      assert.equal((0, _testHelpers.currentURL)(), '/sandbox/api/components/esdoc-component', 'correct url');\n\n      let indexItems = _module2.default.index.items.map(i => i.text);\n\n      assert.equal(indexItems.length, 7, 'correct number of items rendered');\n      assert.ok(indexItems.includes('Yields') && indexItems.includes('Arguments'), 'correct sections rendered');\n\n      await _module2.default.toggles.findOne({ text: 'Internal' }).click();\n      await (0, _testHelpers.waitUntil)(() => _module2.default.index.items.length === 12);\n\n      indexItems = _module2.default.index.items.map(i => i.text);\n\n      assert.ok(indexItems.includes('Fields') && indexItems.includes('Methods'), 'correct sections rendered');\n\n      await _module2.default.toggles.findOne({ text: 'Private' }).click();\n      await (0, _testHelpers.waitUntil)(() => _module2.default.index.items.length === 13);\n\n      indexItems = _module2.default.index.items.map(i => i.text);\n\n      assert.equal(indexItems.length, 13, 'correct number of items rendered');\n      assert.ok(indexItems.includes('_privateField'), 'private field rendered');\n    });\n\n    (0, _qunit.test)('welcome page \\'Edit this page\\' link is correct', async function (assert) {\n      await (0, _testHelpers.visit)('/sandbox');\n\n      const editThisPageLinkHref = await _module2.default.editLink.href;\n\n      assert.equal(editThisPageLinkHref, 'https://github.com/ember-learn/ember-cli-addon-docs/edit/master/tests/dummy/app/pods/sandbox/index/template.md');\n    });\n  });\n});","define('dummy/tests/acceptance/sandbox/api/guides-test', ['qunit', 'ember-qunit', 'ember-cli-mirage/test-support/setup-mirage', '@ember/test-helpers', 'dummy/tests/pages/api/module'], function (_qunit, _emberQunit, _setupMirage, _testHelpers, _module2) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | Sandbox | API | Guides', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _setupMirage.default)(hooks);\n\n    (0, _qunit.test)('page index works', async function (assert) {\n      await (0, _testHelpers.visit)('/sandbox');\n\n      assert.equal((0, _testHelpers.currentURL)(), `/sandbox`, 'correct url');\n\n      let indexItems = _module2.default.index.items.map(i => i.text);\n\n      assert.equal(indexItems.length, 2, 'correct number of items rendered');\n      assert.ok(indexItems.includes('Subsection') && indexItems.includes('Sub-subsection'), 'correct sections rendered');\n    });\n  });\n});","define('dummy/tests/acceptance/sandbox/api/helpers-test', ['qunit', 'ember-qunit', 'ember-cli-mirage/test-support/setup-mirage', '@ember/test-helpers', 'dummy/tests/pages/api/module', 'dummy/tests/pages/api/class'], function (_qunit, _emberQunit, _setupMirage, _testHelpers, _module2, _class) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | Sandbox | API | helpers', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _setupMirage.default)(hooks);\n\n    (0, _qunit.module)('standard helpers', function () {\n      for (let documenter of ['esdoc', 'yuidoc']) {\n        let helperName = `${documenter}Helper`;\n        let kebabName = `${documenter}-helper`;\n\n        (0, _qunit.test)(`{{${kebabName}}}`, async function (assert) {\n          await (0, _testHelpers.visit)('/sandbox');\n          await _module2.default.navItems.findOne({ text: `{{${kebabName}}}` }).click();\n\n          assert.equal((0, _testHelpers.currentURL)(), `/sandbox/api/helpers/${kebabName}`, 'correct url');\n\n          let functionsSection = _module2.default.sections.findOne({ header: 'Functions' });\n\n          assert.ok(functionsSection.isPresent, 'Renders the functions section');\n\n          let helperItem = functionsSection.items.findOne(i => i.header.includes(helperName));\n\n          assert.ok(helperItem.isPresent, 'Renders the helper item');\n\n          assert.equal(helperItem.header, `${helperName}(number: number): number`, 'renders the type signature of the helper correctly');\n\n          assert.equal(helperItem.importPath, `import { ${helperName} } from 'sandbox/helpers/${kebabName}';`, 'renders the import path correctly');\n\n          assert.equal(helperItem.params.length, 1, 'renders the item parameter');\n        });\n      }\n    });\n\n    (0, _qunit.module)('class helpers', function () {\n      for (let documenter of ['ESDoc', 'YUIDoc']) {\n        let helperName = `${documenter}ClassHelper`;\n        let kebabName = `${documenter.toLowerCase()}-class-helper`;\n\n        (0, _qunit.test)(`{{${kebabName}}}`, async function (assert) {\n          await (0, _testHelpers.visit)('/sandbox');\n          await _class.default.navItems.findOne({ text: `{{${kebabName}}}` }).click();\n\n          assert.equal((0, _testHelpers.currentURL)(), `/sandbox/api/helpers/${kebabName}`, 'correct url');\n\n          assert.equal(_class.default.title, helperName, 'Renders the class title correctly');\n\n          let methodsSection = _module2.default.sections.findOne({ header: 'Methods' });\n\n          assert.ok(methodsSection.isPresent, 'Renders the methods section');\n\n          let computeItem = methodsSection.items.findOne(i => i.header.includes('compute'));\n\n          assert.ok(computeItem.isPresent, 'Renders the helper item');\n\n          assert.equal(computeItem.header, 'compute(number: number): number', 'renders the type signature of the helper correctly');\n\n          assert.equal(computeItem.params.length, 1, 'renders the item parameter');\n        });\n      }\n    });\n  });\n});","define('dummy/tests/acceptance/search-test', ['qunit', 'ember-qunit', 'ember-cli-mirage/test-support/setup-mirage', '@ember/test-helpers', 'dummy/tests/pages/app'], function (_qunit, _emberQunit, _setupMirage, _testHelpers, _app) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | Search', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _setupMirage.default)(hooks);\n\n    (0, _qunit.test)('search works for guides pages', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      await _app.default.fillInSearchQuery('quickstart');\n\n      await (0, _testHelpers.waitUntil)(() => _app.default.searchResults.items.length > 0);\n\n      await (0, _testHelpers.click)((0, _testHelpers.find)('[data-test-search-result] a'));\n      assert.equal((0, _testHelpers.currentURL)(), '/docs/quickstart');\n    });\n\n    (0, _qunit.test)('search works for API pages', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      await _app.default.fillInSearchQuery('hero');\n\n      await (0, _testHelpers.waitUntil)(() => _app.default.searchResults.items.length > 0);\n\n      await (0, _testHelpers.click)((0, _testHelpers.find)('[data-test-search-result] a'));\n      assert.equal((0, _testHelpers.currentURL)(), '/docs/api/components/docs-hero');\n    });\n  });\n});","define('dummy/tests/acceptance/version-selector-test', ['qunit', 'ember-qunit', 'ember-cli-mirage/test-support/setup-mirage', '@ember/test-helpers', 'dummy/config/environment'], function (_qunit, _emberQunit, _setupMirage, _testHelpers, _environment) {\n  'use strict';\n\n  (0, _qunit.module)('Acceptance | Version selector test', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _setupMirage.default)(hooks);\n\n    (0, _qunit.test)('if the current version is latest and latest has a tag, it displays the tag', async function (assert) {\n      this.owner.lookup('service:project-version').set('currentVersion', {\n        \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n        \"tag\": 'v0.1.0',\n        \"path\": \"\",\n        \"key\": \"-latest\",\n        \"name\": \"latest\"\n      });\n\n      await (0, _testHelpers.visit)('/');\n\n      assert.dom('[data-test-id=\"current-version\"]').includesText('v0.1.0');\n    });\n\n    (0, _qunit.test)(`if the current version is latest and latest doesn't have a tag, it displays Latest`, async function (assert) {\n      this.owner.lookup('service:project-version').set('currentVersion', {\n        \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n        \"tag\": null,\n        \"path\": \"\",\n        \"key\": \"-latest\",\n        \"name\": \"latest\"\n      });\n\n      await (0, _testHelpers.visit)('/');\n\n      assert.dom('[data-test-id=\"current-version\"]').includesText('Latest');\n    });\n\n    (0, _qunit.test)(`the version selector renders correctly`, async function (assert) {\n      server.get('/versions.json', {\n        \"-latest\": {\n          \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n          \"tag\": null,\n          \"path\": \"\",\n          \"name\": \"Latest\"\n        },\n        \"master\": {\n          \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n          \"tag\": null,\n          \"path\": \"master\",\n          \"name\": \"master\"\n        },\n        \"v0.1.0\": {\n          \"sha\": \"d752437850bc9833ea3e354095b501473b0420ae\",\n          \"tag\": \"v0.1.0\",\n          \"path\": \"v0.1.0\",\n          \"name\": \"v0.1.0\"\n        }\n      });\n\n      await (0, _testHelpers.visit)('/');\n      await (0, _testHelpers.click)('[data-test-id=\"current-version\"]');\n\n      assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('Latest', 'latest is rendered first');\n      assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('53b73', 'latest renders a sha when tag is null');\n      assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('check', 'the current version has a check');\n\n      assert.dom('[data-test-id=\"version\"]:nth-child(2)').includesText('master', 'master is rendered secon');\n      assert.dom('[data-test-id=\"version\"]:nth-child(2)').includesText('53b73');\n\n      assert.dom('[data-test-id=\"version\"]:nth-child(3)').includesText('v0.1.0', 'tags are rendered last');\n      assert.dom('[data-test-id=\"version\"]:nth-child(3)').includesText('d7524');\n    });\n\n    (0, _qunit.test)(`the version selector renders a tag for latest if present`, async function (assert) {\n      server.get('/versions.json', {\n        \"-latest\": {\n          \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n          \"tag\": 'v0.1.0',\n          \"path\": \"\",\n          \"name\": \"Latest\"\n        },\n        \"master\": {\n          \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n          \"tag\": null,\n          \"path\": \"master\",\n          \"name\": \"master\"\n        },\n        \"v0.1.0\": {\n          \"sha\": \"d752437850bc9833ea3e354095b501473b0420ae\",\n          \"tag\": \"v0.1.0\",\n          \"path\": \"v0.1.0\",\n          \"name\": \"v0.1.0\"\n        }\n      });\n\n      await (0, _testHelpers.visit)('/');\n      await (0, _testHelpers.click)('[data-test-id=\"current-version\"]');\n\n      assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('Latest', 'latest is rendered first');\n      assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('v0.1.0', 'latest renders a tag if present');\n    });\n\n    (0, _qunit.module)('with a custom primary branch configured', function (hooks) {\n      let oldPrimaryBranch;\n      hooks.beforeEach(function () {\n        oldPrimaryBranch = _environment.default.primaryBranch;\n        _environment.default.primaryBranch = 'develop';\n      });\n\n      hooks.afterEach(function () {\n        _environment.default.primaryBranch = oldPrimaryBranch;\n      });\n\n      (0, _qunit.test)(`the version selector honors the primary branch`, async function (assert) {\n        server.get('/versions.json', {\n          \"-latest\": {\n            \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n            \"tag\": null,\n            \"path\": \"\",\n            \"name\": \"Latest\"\n          },\n          \"master\": {\n            \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n            \"tag\": null,\n            \"path\": \"master\",\n            \"name\": \"master\"\n          },\n          \"develop\": {\n            \"sha\": \"53b73465d31925f26fd1f77881aefcaccce2915a\",\n            \"tag\": null,\n            \"path\": \"develop\",\n            \"name\": \"develop\"\n          }\n        });\n\n        await (0, _testHelpers.visit)('/');\n        await (0, _testHelpers.click)('[data-test-id=\"current-version\"]');\n\n        assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('Latest', 'latest is rendered first');\n        assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('53b73', 'latest renders a sha when tag is null');\n        assert.dom('[data-test-id=\"version\"]:nth-child(1)').includesText('check', 'the current version has a check');\n\n        assert.dom('[data-test-id=\"version\"]:nth-child(2)').includesText('develop', 'develop is rendered second');\n        assert.dom('[data-test-id=\"version\"]:nth-child(2)').includesText('53b73');\n\n        assert.dom('[data-test-id=\"version\"]:nth-child(3)').includesText('master', 'other branches are rendered last');\n        assert.dom('[data-test-id=\"version\"]:nth-child(3)').includesText('53b73');\n      });\n    });\n  });\n});","define('dummy/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pods/docs/components/docs-demo/controller.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/docs/components/docs-demo/controller.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pods/docs/components/docs-demo/demo2/component.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/docs/components/docs-demo/demo2/component.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pods/sandbox/api/item/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/sandbox/api/item/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pods/sandbox/route.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/sandbox/route.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n    if (window.server) {\n      window.server.shutdown();\n    }\n  }\n});","define('dummy/tests/helpers/ember-cli-clipboard', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.triggerSuccess = triggerSuccess;\n  exports.triggerError = triggerError;\n\n  exports.default = function () {\n    Ember.Test.registerAsyncHelper('triggerCopySuccess', function (app, selector = '.copy-btn') {\n      fireComponentActionFromApp(app, selector, 'success');\n    });\n\n    Ember.Test.registerAsyncHelper('triggerCopyError', function (app, selector = '.copy-btn') {\n      fireComponentActionFromApp(app, selector, 'error');\n    });\n  };\n\n  /* === Integration Test Helpers === */\n\n  /**\n   * Fires `success` action for an instance of a copy-button component\n   * @function triggerSuccess\n   * @param {Object} context - integration test’s this context\n   * @param {String|Element} selector - selector of the copy-button instance\n   * @returns {Void}\n   */\n  function triggerSuccess(context, selector) {\n    fireComponentAction(context, selector, 'success');\n  }\n\n  /**\n   * Fires `error` action for an instance of a copy-button component\n   * @function triggerError\n   * @param {Object} context - integration test’s this context\n   * @param {String|Element} selector - selector of the copy-button instance\n   * @returns {Void}\n   */\n  function triggerError(context, selector) {\n    fireComponentAction(context, selector, 'error');\n  }\n\n  /* === Acceptance Test Helpers === */\n\n  /**\n   * Default export is a function that registers acceptance test helpers\n   */\n\n\n  /* === Private Functions === */\n\n  /**\n   * Fires named action for an instance of a copy-button component in an app\n   * @function fireComponentActionFromApp\n   * @param {Object} app - Ember application\n   * @param {String|Element} selector - selector of the copy-button instance\n   * @param {String} actionName - name of action\n   * @returns {Void}\n   */\n  function fireComponentActionFromApp(app, selector, actionName) {\n    fireComponentAction({\n      container: app.__container__,\n      $: app.$\n    }, selector, actionName);\n  }\n\n  /**\n   * Fires named action for an instance of a copy-button component\n   * @function fireComponentAction\n   * @param {Object} context - test context\n   * @param {String|Element} selector - selector of the copy-button instance\n   * @param {String} actionName - name of action\n   * @returns {Void}\n   */\n  function fireComponentAction(context, selector, actionName) {\n    let component = getComponentBySelector(context, selector);\n    fireActionByName(component, actionName);\n  }\n\n  /**\n   * Fetches component reference for a given context and selector\n   * @function getComponentBySelector\n   * @param {Object} context - test context\n   * @param {String|Element} selector - selector of the copy-button instance\n   * @returns {Object} component object\n   */\n  function getComponentBySelector(context, selector = '.copy-btn') {\n    let emberId = context.$(selector).attr('id');\n    return context.container.lookup('-view-registry:main')[emberId];\n  }\n\n  /**\n   * Fires a component's action given an action name\n   * @function fireActionByName\n   * @param {Ember.Component} component - component to fire action from\n   * @param {String} actionName - name of action\n   * @returns {Void}\n   */\n  function fireActionByName(component, actionName) {\n    let action = component[actionName];\n\n    Ember.run(() => {\n      if (typeof action === 'string') {\n        component.sendAction(action);\n      } else {\n        action();\n      }\n    });\n  }\n});","define('dummy/tests/helpers/ember-keyboard/register-test-helpers', ['exports', 'ember-keyboard', 'ember-keyboard/fixtures/modifiers-array', 'ember-keyboard/fixtures/mouse-buttons-array', 'ember-keyboard/utils/get-cmd-key'], function (exports, _emberKeyboard, _modifiersArray, _mouseButtonsArray, _getCmdKey) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function () {\n    Ember.Test.registerAsyncHelper('keyDown', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'keydown', element);\n    });\n\n    Ember.Test.registerAsyncHelper('keyUp', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'keyup', element);\n    });\n\n    Ember.Test.registerAsyncHelper('keyPress', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'keypress', element);\n    });\n\n    Ember.Test.registerAsyncHelper('mouseDown', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'mousedown', element);\n    });\n\n    Ember.Test.registerAsyncHelper('mouseUp', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'mouseup', element);\n    });\n\n    Ember.Test.registerAsyncHelper('touchStart', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'touchstart', element);\n    });\n\n    Ember.Test.registerAsyncHelper('touchEnd', function (app, attributes, element) {\n      return keyEvent(app, attributes, 'touchend', element);\n    });\n  };\n\n  const keyEvent = function keyEvent(app, attributes, type, element) {\n    const event = (attributes || '').split('+').reduce((event, attribute) => {\n      if (_modifiersArray.default.indexOf(attribute) > -1) {\n        attribute = attribute === 'cmd' ? (0, _getCmdKey.default)() : attribute;\n        event[`${attribute}Key`] = true;\n      } else if (_mouseButtonsArray.default.indexOf(attribute) > -1) {\n        event.button = (0, _emberKeyboard.getMouseCode)(attribute);\n      } else {\n        event.keyCode = (0, _emberKeyboard.getKeyCode)(attribute);\n      }\n\n      return event;\n    }, {});\n\n    return app.testHelpers.triggerEvent(element || document.body, type, event);\n  };\n});","define('dummy/tests/helpers/ember-test-selectors', ['exports', 'ember-test-selectors'], function (exports, _emberTestSelectors) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const { deprecate } = Ember;\n\n  let message = 'Importing testSelector() from \"<appname>/tests/helpers/ember-test-selectors\" is deprecated. ' + 'Please import testSelector() from \"ember-test-selectors\" instead.';\n\n  deprecate(message, false, {\n    id: 'ember-test-selectors.test-selector-import',\n    until: '0.2.0',\n    url: 'https://github.com/simplabs/ember-test-selectors#usage'\n  });\n\n  exports.default = _emberTestSelectors.default;\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name, options = {}) {\n    (0, _qunit.module)(name, {\n      beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach() {\n        let afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Ember.RSVP.resolve(afterEach).then(() => (0, _destroyApp.default)(this.application));\n      }\n    });\n  };\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('dummy/tests/helpers/start-app', ['exports', 'dummy/app', 'dummy/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    let attributes = Ember.merge({}, _environment.default.APP);\n    attributes.autoboot = true;\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(() => {\n      let application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('dummy/tests/page-object', ['exports', 'ember-cli-page-object'], function (exports, _emberCliPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fullScope = exports.getContext = exports.findElement = exports.findElementWithAssert = exports.buildSelector = exports.visitable = exports.value = exports.triggerable = exports.text = exports.property = exports.notHasClass = exports.isVisible = exports.isPresent = exports.isHidden = exports.is = exports.hasClass = exports.selectable = exports.fillable = exports.create = exports.count = exports.contains = exports.collection = exports.clickable = exports.clickOnText = exports.attribute = exports.alias = undefined;\n  Object.defineProperty(exports, 'buildSelector', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.buildSelector;\n    }\n  });\n  Object.defineProperty(exports, 'findElementWithAssert', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.findElementWithAssert;\n    }\n  });\n  Object.defineProperty(exports, 'findElement', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.findElement;\n    }\n  });\n  Object.defineProperty(exports, 'getContext', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.getContext;\n    }\n  });\n  Object.defineProperty(exports, 'fullScope', {\n    enumerable: true,\n    get: function () {\n      return _emberCliPageObject.fullScope;\n    }\n  });\n  exports.alias = _emberCliPageObject.alias;\n  exports.attribute = _emberCliPageObject.attribute;\n  exports.clickOnText = _emberCliPageObject.clickOnText;\n  exports.clickable = _emberCliPageObject.clickable;\n  exports.collection = _emberCliPageObject.collection;\n  exports.contains = _emberCliPageObject.contains;\n  exports.count = _emberCliPageObject.count;\n  exports.create = _emberCliPageObject.create;\n  exports.fillable = _emberCliPageObject.fillable;\n  exports.selectable = _emberCliPageObject.fillable;\n  exports.hasClass = _emberCliPageObject.hasClass;\n  exports.is = _emberCliPageObject.is;\n  exports.isHidden = _emberCliPageObject.isHidden;\n  exports.isPresent = _emberCliPageObject.isPresent;\n  exports.isVisible = _emberCliPageObject.isVisible;\n  exports.notHasClass = _emberCliPageObject.notHasClass;\n  exports.property = _emberCliPageObject.property;\n  exports.text = _emberCliPageObject.text;\n  exports.triggerable = _emberCliPageObject.triggerable;\n  exports.value = _emberCliPageObject.value;\n  exports.visitable = _emberCliPageObject.visitable;\n  exports.default = {\n    alias: _emberCliPageObject.alias,\n    attribute: _emberCliPageObject.attribute,\n    clickOnText: _emberCliPageObject.clickOnText,\n    clickable: _emberCliPageObject.clickable,\n    collection: _emberCliPageObject.collection,\n    contains: _emberCliPageObject.contains,\n    count: _emberCliPageObject.count,\n    create: _emberCliPageObject.create,\n    fillable: _emberCliPageObject.fillable,\n    hasClass: _emberCliPageObject.hasClass,\n    is: _emberCliPageObject.is,\n    isHidden: _emberCliPageObject.isHidden,\n    isPresent: _emberCliPageObject.isPresent,\n    isVisible: _emberCliPageObject.isVisible,\n    notHasClass: _emberCliPageObject.notHasClass,\n    property: _emberCliPageObject.property,\n    selectable: _emberCliPageObject.fillable,\n    text: _emberCliPageObject.text,\n    triggerable: _emberCliPageObject.triggerable,\n    value: _emberCliPageObject.value,\n    visitable: _emberCliPageObject.visitable\n  };\n});","define('dummy/tests/pages/api/class', ['exports', 'dummy/tests/pages/base', 'ember-classy-page-object'], function (exports, _base, _emberClassyPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const ClassPage = _base.default.extend({\n    navItems: (0, _emberClassyPageObject.collection)({ scope: '[data-test-id=\"nav-item\"]' }),\n\n    title: (0, _emberClassyPageObject.text)('[data-test-class-name]'),\n    description: (0, _emberClassyPageObject.text)('[data-test-class-description]'),\n\n    sections: (0, _emberClassyPageObject.collection)({\n      scope: '[data-test-api-section]',\n\n      header: (0, _emberClassyPageObject.text)('[data-test-section-header]'),\n\n      items: (0, _emberClassyPageObject.collection)({\n        scope: '[data-test-item]',\n\n        header: (0, _emberClassyPageObject.text)('[data-test-item-header]'),\n        importPath: (0, _emberClassyPageObject.text)('[data-test-import-path]'),\n        description: (0, _emberClassyPageObject.text)('[data-test-item-description]'),\n\n        params: (0, _emberClassyPageObject.collection)({\n          scope: '[data-test-item-params] [data-test-item-param]'\n        })\n      })\n    })\n  });\n\n  exports.default = ClassPage.create();\n});","define('dummy/tests/pages/api/module', ['exports', 'dummy/tests/pages/base', 'ember-classy-page-object'], function (exports, _base, _emberClassyPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const ModulePage = _base.default.extend({\n    navItems: (0, _emberClassyPageObject.collection)({ scope: '[data-test-id=\"nav-item\"]' }),\n\n    toggles: (0, _emberClassyPageObject.collection)({\n      scope: '[data-test-toggle]'\n    }),\n\n    sections: (0, _emberClassyPageObject.collection)({\n      scope: '[data-test-api-section]',\n\n      header: (0, _emberClassyPageObject.text)('[data-test-section-header]'),\n\n      items: (0, _emberClassyPageObject.collection)({\n        scope: '[data-test-item]',\n\n        header: (0, _emberClassyPageObject.text)('[data-test-item-header]'),\n        importPath: (0, _emberClassyPageObject.text)('[data-test-import-path]'),\n        description: (0, _emberClassyPageObject.text)('[data-test-item-description]'),\n\n        params: (0, _emberClassyPageObject.collection)({\n          scope: '[data-test-item-params] [data-test-item-param]'\n        })\n      })\n    }),\n\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    editLink: {\n      scope: '[data-test-edit-page-link]',\n      href: (0, _emberClassyPageObject.attribute)('href', 'a')\n    },\n\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    index: {\n      scope: '[data-test-page-index]',\n\n      items: (0, _emberClassyPageObject.collection)({\n        scope: '[data-test-index-item]'\n      })\n    }\n  });\n\n  exports.default = ModulePage.create();\n});","define('dummy/tests/pages/app', ['exports', 'dummy/tests/pages/base'], function (exports, _base) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _base.default.create();\n});","define('dummy/tests/pages/base', ['exports', 'ember-classy-page-object'], function (exports, _emberClassyPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const DefaultPage = _emberClassyPageObject.default.extend({\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    fillInSearchQuery: (0, _emberClassyPageObject.fillable)('[data-test-search-box-input]'),\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    searchResults: {\n      scope: '[data-test-search-result-list]',\n      items: (0, _emberClassyPageObject.collection)({\n        scope: '[data-test-search-result]'\n      })\n    }\n  });\n\n  exports.default = DefaultPage;\n});","define('dummy/tests/pages/guide', ['exports', 'dummy/tests/pages/base', 'ember-classy-page-object'], function (exports, _base, _emberClassyPageObject) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const GuidePage = _base.default.extend({\n    navItems: (0, _emberClassyPageObject.collection)({ scope: '[data-test-id=\"nav-item\"]' }),\n\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    index: {\n      scope: '[data-test-page-index]',\n\n      items: (0, _emberClassyPageObject.collection)({\n        scope: '[data-test-index-item]'\n      })\n    }\n  });\n\n  exports.default = GuidePage.create();\n});","define('dummy/tests/test-helper', ['dummy/app', 'dummy/config/environment', '@ember/test-helpers', 'ember-qunit'], function (_app, _environment, _testHelpers, _emberQunit) {\n  'use strict';\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n\n  (0, _emberQunit.start)();\n});","define('dummy/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('acceptance/docs-route-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/docs-route-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/sandbox/api/components-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/sandbox/api/components-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/sandbox/api/guides-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/sandbox/api/guides-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/sandbox/api/helpers-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/sandbox/api/helpers-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/search-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/search-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('acceptance/version-selector-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/version-selector-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pages/api/class.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pages/api/class.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pages/api/module.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pages/api/module.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pages/app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pages/app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pages/base.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pages/base.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('pages/guide.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pages/guide.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}